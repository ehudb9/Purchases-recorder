version: "3"
services:
  client-ui:
    build: ./client/client-ui
    ports:
      - "3000:3000"
    depends_on:
      - customer-facing-api

  customer-facing-api:
    build: ./client/client-server
    ports:
      - "3001:3001"
    depends_on:
      - db
      - kafka
      - customer-manager-web-server

  customer-manager-web-server:
    build: ./backend/CustomerManagerWebServer
    ports:
      - "4001:4001"
    depends_on:
      - db
      - kafka

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: 'kafka'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
      - db
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: purchases_records
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
  
  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "7000:7000"
  #   depends_on:
  #     - db
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=your_password
  #   volumes:
  #     - grafana-data:/var/lib/grafana

volumes:
  grafana-data:
  postgres-data: